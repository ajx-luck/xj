*************************************
------------- Call Depth ------------
 Depth  Interrupt    Function
-------------------------------------
    0        N         ProgramStart
    1        Y           _interrupt_l
    1        Y           _interrupt
    0        N         _main
C   1        N           _IO_Init
C   1        N           _ledBreath
C   1        N           _motorWork2
C   1        N           _keyCtr
C   2        N             _keyRead
C   1        N           _chrgCtr
C   1        N           _workCtr
C   2        N             _gotoSleep
C   2        N             _motorWork
C   1        N           _breathCtr
-------------------------------------
Stack Depth: 2
****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X7    , Size=7
Start=0X2B   , End=0X2C   , Size=2
Start=0X19A  , End=0X3FF  , Size=614
----------------------------------------
EM78P153B       |        ROM Size        
----------------+-----------------------
Total           |  1024 x 13 bits(100.0%)
Used            |   401 x 13 bits( 39.2%)
Free            |   623 x 13 bits( 60.8%)
----------------------------------------
*************************************
-------------- Data Map -------------
d -- Uninitialized data
D -- Initialized data
b -- Uninitialized bit data
B -- Initialized bit data
C -- C Register
-------------- RAM Data -------------
0x00  - - - - - - - - - - - - - - - - 
0x10  - - - - - - - - - - - - - - - - 
0x20  b D D D D D D D D D D D d d d d 
0x30  C C - - - - - - - - - - - - - - 
----------- Register Data -----------
0x00  d d d b d b b - d d d d d d d b 
0x10  d C C C - - - - - - - - - - - - 
-------------- IO Data --------------
0x00  - - - - - - d - - d - d - d d d 
****************************************
--------------- ROM Code ---------------
    0x0000 :  JMP   0x02D       
    0x0001 :  ADD   A, @0xFF    
    0x0002 :  ADD   A, @0xFF    
    0x0003 :  ADD   A, @0xFF    
    0x0004 :  ADD   A, @0xFF    
    0x0005 :  ADD   A, @0xFF    
    0x0006 :  ADD   A, @0xFF    
    0x0007 :  ADD   A, @0xFF    
    0x0008 :  JMP   0x009       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 331)
  ;MOV 0x3D,A ;保存 A
    0x0009 :  MOV   0x10, A     
    0x000A :  SWAPA 0x04        
    0x000B :  MOV   0x30, A     
    0x000C :  SWAPA 0x03        
    0x000D :  MOV   0x31, A     
    0x000E :  MOV   0x3D, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 332)
  ;MOV A,0x03
    0x000F :  MOV   A, 0x03     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 333)
  ;MOV 0x3E,A ;保存 R3
    0x0010 :  MOV   0x3E, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 334)
  ;MOV A,0x04
    0x0011 :  MOV   A, 0x04     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 335)
  ;MOV 0x3F,A ;保存 R4
    0x0012 :  MOV   0x3F, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 338)
  ;if	(TCIF==1)
    0x0013 :  JBS   0x0F, 0     
    0x0014 :  JMP   0x020       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 341)
  ;ISR&=0XFE;				//清TCC中断标志位
    0x0015 :  MOV   A, @0xFE    
    0x0016 :  AND   0x0F, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 342)
  ;TCC+=206;					//TCC赋初值 0.2ms
    0x0017 :  MOV   A, @0xCE    
    0x0018 :  ADD   0x01, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 344)
  ;if(++intCount >= 100)
    0x0019 :  INC   0x21        
    0x001A :  MOV   A, @0x64    
    0x001B :  SUB   A, 0x21     
    0x001C :  JBS   0x03, 0     
    0x001D :  JMP   0x020       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 346)
  ;intCount = 0;		//10ms
    0x001E :  CLR   0x21        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 347)
  ;IntFlag = 1;
    0x001F :  BS    0x20, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 355)
  ;MOV A,0x3F ;返回 R4
    0x0020 :  MOV   A, 0x3F     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 356)
  ;MOV 0x04,A
    0x0021 :  MOV   0x04, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 357)
  ;MOV A,0x3E ;返回 R3
    0x0022 :  MOV   A, 0x3E     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 358)
  ;MOV 0x03,A
    0x0023 :  MOV   0x03, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 359)
  ;SWAP 0x3D  ;返回 A
    0x0024 :  SWAP  0x3D        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 360)
  ;SWAPA 0x3D
    0x0025 :  SWAPA 0x3D        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 362)
  ;}
    0x0026 :  SWAPA 0x31        
    0x0027 :  MOV   0x03, A     
    0x0028 :  SWAPA 0x30        
    0x0029 :  MOV   0x04, A     
    0x002A :  RETI              
    0x002B :  ADD   A, @0xFF    
    0x002C :  ADD   A, @0xFF    
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 47)
  ;WDTC();
    0x002D :  MOV   A, @0x00    
    0x002E :  MOV   0x21, A     
    0x002F :  MOV   0x22, A     
    0x0030 :  MOV   0x23, A     
    0x0031 :  MOV   0x24, A     
    0x0032 :  MOV   0x25, A     
    0x0033 :  MOV   0x26, A     
    0x0034 :  MOV   0x27, A     
    0x0035 :  MOV   0x28, A     
    0x0036 :  MOV   0x29, A     
    0x0037 :  MOV   0x2A, A     
    0x0038 :  MOV   0x2B, A     
    0x0039 :  WDTC              
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 48)
  ;DISI();
    0x003A :  DISI              
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 49)
  ;WDTCR=0;				//禁止WDT
    0x003B :  MOV   A, @0x00    
    0x003C :  IOW   0xE         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 51)
  ;IO_Init();	            //IO初始化
    0x003D :  CALL  0x05F       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 53)
  ;TCC=206;					//
    0x003E :  MOV   A, @0xCE    
    0x003F :  MOV   0x01, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 54)
  ;ISR=0;
    0x0040 :  CLR   0x0F        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 55)
  ;IMR=1;
    0x0041 :  MOV   A, @0x01    
    0x0042 :  IOW   0xF         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 57)
  ;ENI();
    0x0043 :  ENI               
    0x0044 :  JMP   0x05D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 63)
  ;WDTC(); //清狗
    0x0045 :  WDTC              
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 64)
  ;if(chrgFlag)
    0x0046 :  MOV   0x26, 0x26  
    0x0047 :  JBC   0x03, 2     
    0x0048 :  JMP   0x04A       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 65)
  ;ledBreath();
    0x0049 :  CALL  0x067       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 66)
  ;if(motorFlag)
    0x004A :  MOV   0x27, 0x27  
    0x004B :  JBC   0x03, 2     
    0x004C :  JMP   0x04E       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 68)
  ;motorWork2();
    0x004D :  CALL  0x075       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 70)
  ;if(!IntFlag)			//10ms执行一次
    0x004E :  JBC   0x20, 0     
    0x004F :  JMP   0x051       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 71)
  ;continue;
    0x0050 :  JMP   0x05D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 72)
  ;IntFlag = 0;
    0x0051 :  BC    0x20, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 73)
  ;keyCtr();
    0x0052 :  CALL  0x083       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 74)
  ;if(P62) 	//充电判断
    0x0053 :  JBS   0x06, 2     
    0x0054 :  JMP   0x057       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 75)
  ;chrgCtr();
    0x0055 :  CALL  0x0D0       
    0x0056 :  JMP   0x059       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 78)
  ;chrgFlag = 0;	//充电呼吸灯标志
    0x0057 :  CLR   0x26        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 79)
  ;workCtr();
    0x0058 :  CALL  0x0D9       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 81)
  ;if(chrgFlag)
    0x0059 :  MOV   0x26, 0x26  
    0x005A :  JBC   0x03, 2     
    0x005B :  JMP   0x05D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 82)
  ;breathCtr();
    0x005C :  CALL  0x133       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 61)
  ;while(1)
    0x005D :  JMP   0x045       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 85)
  ;}
    0x005E :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 237)
  ;PORT6 = 0x00;
    0x005F :  CLR   0x06        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 238)
  ;P6CR = 0x34;			//PORT6设为输出(0 输出,1 输入)
    0x0060 :  MOV   A, @0x34    
    0x0061 :  IOW   0x6         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 239)
  ;PHCR = 0xEF;			//P64上拉
    0x0062 :  MOV   A, @0xEF    
    0x0063 :  IOW   0xD         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 241)
  ;mov	a,@0x02			//TCC分频比设为1：8
    0x0064 :  MOV   A, @0x02    
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 242)
  ;contw
    0x0065 :  CONTW             
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 244)
  ;}
    0x0066 :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 91)
  ;if(ledCount >= duty)
    0x0067 :  MOV   A, 0x29     
    0x0068 :  SUB   A, 0x25     
    0x0069 :  JBS   0x03, 0     
    0x006A :  JMP   0x06D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 93)
  ;P63 = 1;
    0x006B :  BS    0x06, 3     
    0x006C :  JMP   0x06E       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 97)
  ;P63 = 0;
    0x006D :  BC    0x06, 3     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 99)
  ;if(++ledCount > 100)
    0x006E :  INC   0x25        
    0x006F :  MOV   A, 0x25     
    0x0070 :  SUB   A, @0x64    
    0x0071 :  JBC   0x03, 0     
    0x0072 :  JMP   0x074       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 100)
  ;ledCount = 0;
    0x0073 :  CLR   0x25        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 101)
  ;}
    0x0074 :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 150)
  ;if(motorCount > 30)
    0x0075 :  MOV   A, 0x28     
    0x0076 :  SUB   A, @0x1E    
    0x0077 :  JBC   0x03, 0     
    0x0078 :  JMP   0x07B       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 152)
  ;P60 = 0;
    0x0079 :  BC    0x06, 0     
    0x007A :  JMP   0x07C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 156)
  ;P60 = 1;
    0x007B :  BS    0x06, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 159)
  ;if(++motorCount > 100)
    0x007C :  INC   0x28        
    0x007D :  MOV   A, 0x28     
    0x007E :  SUB   A, @0x64    
    0x007F :  JBC   0x03, 0     
    0x0080 :  JMP   0x082       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 160)
  ;motorCount = 0;
    0x0081 :  CLR   0x28        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 161)
  ;}
    0x0082 :  RET               
    0x0083 :  MOV   A, 0x12     
    0x0084 :  MOV   0x2E, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 248)
  ;char kclick = keyRead(0x10 & (~PORT6));
    0x0085 :  MOV   A, 0x06     
    0x0086 :  MOV   0x12, A     
    0x0087 :  COM   0x12        
    0x0088 :  MOV   A, @0x10    
    0x0089 :  AND   A, 0x12     
    0x008A :  MOV   0x2F, A     
    0x008B :  CALL  0x0AB       
    0x008C :  MOV   A, 0x11     
    0x008D :  MOV   0x2D, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 250)
  ;if(kclick == 1)
    0x008E :  MOV   A, 0x2D     
    0x008F :  XOR   A, @0x01    
    0x0090 :  JBS   0x03, 2     
    0x0091 :  JMP   0x09D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 254)
  ;if(workStep > 0)
    0x0092 :  MOV   0x22, 0x22  
    0x0093 :  JBC   0x03, 2     
    0x0094 :  JMP   0x0A8       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 256)
  ;if(++workStep > 4)
    0x0095 :  INC   0x22        
    0x0096 :  MOV   A, 0x22     
    0x0097 :  SUB   A, @0x04    
    0x0098 :  JBC   0x03, 0     
    0x0099 :  JMP   0x0A8       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 257)
  ;workStep = 1;
    0x009A :  MOV   A, @0x01    
    0x009B :  MOV   0x22, A     
    0x009C :  JMP   0x0A8       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 261)
  ;else if(kclick == 2)
    0x009D :  MOV   A, 0x2D     
    0x009E :  XOR   A, @0x02    
    0x009F :  JBS   0x03, 2     
    0x00A0 :  JMP   0x0A8       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 263)
  ;if(workStep == 0)
    0x00A1 :  MOV   0x22, 0x22  
    0x00A2 :  JBS   0x03, 2     
    0x00A3 :  JMP   0x0A7       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 264)
  ;workStep = 1;
    0x00A4 :  MOV   A, @0x01    
    0x00A5 :  MOV   0x22, A     
    0x00A6 :  JMP   0x0A8       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 266)
  ;workStep = 0;
    0x00A7 :  CLR   0x22        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 272)
  ;}
    0x00A8 :  MOV   A, 0x2E     
    0x00A9 :  MOV   0x12, A     
    0x00AA :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 276)
  ;if(keyStatus)
    0x00AB :  MOV   0x2F, 0x2F  
    0x00AC :  JBC   0x03, 2     
    0x00AD :  JMP   0x0BB       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 278)
  ;keyCount++;
    0x00AE :  INC   0x23        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 279)
  ;if(keyCount >= 200)
    0x00AF :  MOV   A, @0xC8    
    0x00B0 :  SUB   A, 0x23     
    0x00B1 :  JBS   0x03, 0     
    0x00B2 :  JMP   0x0CD       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 281)
  ;keyCount = 200;
    0x00B3 :  MOV   A, @0xC8    
    0x00B4 :  MOV   0x23, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 282)
  ;if(!longPressFlag)
    0x00B5 :  JBC   0x20, 1     
    0x00B6 :  JMP   0x0CD       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 284)
  ;longPressFlag = 1;
    0x00B7 :  BS    0x20, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 285)
  ;return 2;
    0x00B8 :  MOV   A, @0x02    
    0x00B9 :  MOV   0x11, A     
    0x00BA :  JMP   0x0CF       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 291)
  ;if(keyCount >= 200)
    0x00BB :  MOV   A, @0xC8    
    0x00BC :  SUB   A, 0x23     
    0x00BD :  JBS   0x03, 0     
    0x00BE :  JMP   0x0C4       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 293)
  ;keyCount = 0;
    0x00BF :  CLR   0x23        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 294)
  ;longPressFlag = 0;
    0x00C0 :  BC    0x20, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 295)
  ;return	0;
    0x00C1 :  MOV   A, @0x00    
    0x00C2 :  MOV   0x11, A     
    0x00C3 :  JMP   0x0CF       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 297)
  ;else if(keyCount >= 8)
    0x00C4 :  MOV   A, @0x08    
    0x00C5 :  SUB   A, 0x23     
    0x00C6 :  JBS   0x03, 0     
    0x00C7 :  JMP   0x0CC       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 299)
  ;keyCount = 0;
    0x00C8 :  CLR   0x23        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 300)
  ;return	1;
    0x00C9 :  MOV   A, @0x01    
    0x00CA :  MOV   0x11, A     
    0x00CB :  JMP   0x0CF       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 302)
  ;keyCount = 0;
    0x00CC :  CLR   0x23        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 304)
  ;return 0;
    0x00CD :  MOV   A, @0x00    
    0x00CE :  MOV   0x11, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 305)
  ;}
    0x00CF :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 134)
  ;workStep = 0;
    0x00D0 :  CLR   0x22        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 135)
  ;if(P65)
    0x00D1 :  JBS   0x06, 5     
    0x00D2 :  JMP   0x0D6       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 137)
  ;chrgFlag = 0;
    0x00D3 :  CLR   0x26        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 138)
  ;P63 = 1;
    0x00D4 :  BS    0x06, 3     
    0x00D5 :  JMP   0x0D8       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 142)
  ;chrgFlag = 1;
    0x00D6 :  MOV   A, @0x01    
    0x00D7 :  MOV   0x26, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 145)
  ;}
    0x00D8 :  RET               
    0x00D9 :  MOV   A, 0x12     
    0x00DA :  MOV   0x2D, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 182)
  ;switch(workStep)
    0x00DB :  MOV   A, 0x22     
    0x00DC :  MOV   0x12, A     
    0x00DD :  MOV   0x12, 0x12  
    0x00DE :  JBC   0x03, 2     
    0x00DF :  JMP   0x0F1       
    0x00E0 :  MOV   A, 0x12     
    0x00E1 :  XOR   A, @0x01    
    0x00E2 :  JBC   0x03, 2     
    0x00E3 :  JMP   0x0FC       
    0x00E4 :  MOV   A, 0x12     
    0x00E5 :  XOR   A, @0x02    
    0x00E6 :  JBC   0x03, 2     
    0x00E7 :  JMP   0x101       
    0x00E8 :  MOV   A, 0x12     
    0x00E9 :  XOR   A, @0x03    
    0x00EA :  JBC   0x03, 2     
    0x00EB :  JMP   0x106       
    0x00EC :  MOV   A, 0x12     
    0x00ED :  XOR   A, @0x04    
    0x00EE :  JBC   0x03, 2     
    0x00EF :  JMP   0x10A       
    0x00F0 :  JMP   0x10D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 185)
  ;motorFlag = 0;
    0x00F1 :  CLR   0x27        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 186)
  ;P63 = 1;
    0x00F2 :  BS    0x06, 3     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 187)
  ;PWMCON = 0B00001111;	//1:256分频
    0x00F3 :  MOV   A, @0x0F    
    0x00F4 :  MOV   0x08, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 188)
  ;P60 = 0;
    0x00F5 :  BC    0x06, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 189)
  ;P61 = 0;
    0x00F6 :  BC    0x06, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 190)
  ;if(keyCount == 0)
    0x00F7 :  MOV   0x23, 0x23  
    0x00F8 :  JBS   0x03, 2     
    0x00F9 :  JMP   0x10D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 191)
  ;gotoSleep();
    0x00FA :  CALL  0x110       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 192)
  ;break;
    0x00FB :  JMP   0x10D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 194)
  ;motorFlag = 1;
    0x00FC :  MOV   A, @0x01    
    0x00FD :  MOV   0x27, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 195)
  ;P61 = 0;
    0x00FE :  BC    0x06, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 196)
  ;P63 = 0;
    0x00FF :  BC    0x06, 3     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 197)
  ;break;
    0x0100 :  JMP   0x10D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 199)
  ;motorFlag = 0;
    0x0101 :  CLR   0x27        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 200)
  ;motorWork();
    0x0102 :  CALL  0x125       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 201)
  ;P61 = 0;
    0x0103 :  BC    0x06, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 202)
  ;P63 = 0;
    0x0104 :  BC    0x06, 3     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 203)
  ;break;
    0x0105 :  JMP   0x10D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 205)
  ;P60 = 0;
    0x0106 :  BC    0x06, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 206)
  ;P61 = 1;
    0x0107 :  BS    0x06, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 207)
  ;P63 = 0;
    0x0108 :  BC    0x06, 3     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 208)
  ;break;
    0x0109 :  JMP   0x10D       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 210)
  ;P60 = 1;
    0x010A :  BS    0x06, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 211)
  ;P61 = 1;
    0x010B :  BS    0x06, 1     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 212)
  ;P63 = 0;
    0x010C :  BC    0x06, 3     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 216)
  ;}
    0x010D :  MOV   A, 0x2D     
    0x010E :  MOV   0x12, A     
    0x010F :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 309)
  ;motorFlag = 0;
    0x0110 :  CLR   0x27        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 310)
  ;chrgFlag = 0;
    0x0111 :  CLR   0x26        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 311)
  ;workStep = 0;
    0x0112 :  CLR   0x22        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 312)
  ;WDTCR=0x00;//禁止WDT
    0x0113 :  MOV   A, @0x00    
    0x0114 :  IOW   0xE         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 313)
  ;ICIECR = 0x14;
    0x0115 :  MOV   A, @0x14    
    0x0116 :  MOV   0x0D, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 314)
  ;IMR = 0x02;
    0x0117 :  MOV   A, @0x02    
    0x0118 :  IOW   0xF         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 315)
  ;ISR&=0XF0;
    0x0119 :  MOV   A, @0xF0    
    0x011A :  AND   0x0F, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 316)
  ;DISI();
    0x011B :  DISI              
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 317)
  ;SLEP();
    0x011C :  SLEP              
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 318)
  ;ENI();
    0x011D :  ENI               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 319)
  ;WDTCR=0x80;
    0x011E :  MOV   A, @0x80    
    0x011F :  IOW   0xE         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 320)
  ;ICIECR = 0x00;
    0x0120 :  CLR   0x0D        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 321)
  ;ISR=0;
    0x0121 :  CLR   0x0F        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 322)
  ;IMR=1;
    0x0122 :  MOV   A, @0x01    
    0x0123 :  IOW   0xF         
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 323)
  ;}
    0x0124 :  RET               
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 166)
  ;if(motorCount > 12)
    0x0125 :  MOV   A, 0x28     
    0x0126 :  SUB   A, @0x0C    
    0x0127 :  JBC   0x03, 0     
    0x0128 :  JMP   0x12B       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 168)
  ;P60 = 0;
    0x0129 :  BC    0x06, 0     
    0x012A :  JMP   0x12C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 172)
  ;P60 = 1;
    0x012B :  BS    0x06, 0     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 175)
  ;if(++motorCount > 22)
    0x012C :  INC   0x28        
    0x012D :  MOV   A, 0x28     
    0x012E :  SUB   A, @0x16    
    0x012F :  JBC   0x03, 0     
    0x0130 :  JMP   0x132       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 176)
  ;motorCount = 0;
    0x0131 :  CLR   0x28        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 177)
  ;}
    0x0132 :  RET               
    0x0133 :  MOV   A, 0x12     
    0x0134 :  MOV   0x2D, A     
    0x0135 :  MOV   A, 0x13     
    0x0136 :  MOV   0x2E, A     
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 107)
  ;if(breathCount < 10)
    0x0137 :  MOV   A, @0x00    
    0x0138 :  SUB   A, 0x2B     
    0x0139 :  JBS   0x03, 2     
    0x013A :  JMP   0x13D       
    0x013B :  MOV   A, @0x0A    
    0x013C :  SUB   A, 0x2A     
    0x013D :  JBC   0x03, 0     
    0x013E :  JMP   0x141       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 109)
  ;duty = 0;
    0x013F :  CLR   0x29        
    0x0140 :  JMP   0x17C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 111)
  ;else if(breathCount < 200)
    0x0141 :  MOV   A, @0x00    
    0x0142 :  SUB   A, 0x2B     
    0x0143 :  JBS   0x03, 2     
    0x0144 :  JMP   0x147       
    0x0145 :  MOV   A, @0xC8    
    0x0146 :  SUB   A, 0x2A     
    0x0147 :  JBC   0x03, 0     
    0x0148 :  JMP   0x15A       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 113)
  ;if(breathCount % 2 == 0 && duty < 100)
    0x0149 :  MOV   A, 0x2A     
    0x014A :  MOV   0x12, A     
    0x014B :  MOV   A, 0x2B     
    0x014C :  MOV   0x13, A     
    0x014D :  MOV   A, @0x01    
    0x014E :  AND   0x12, A     
    0x014F :  MOV   A, @0x00    
    0x0150 :  AND   A, 0x13     
    0x0151 :  OR    A, 0x12     
    0x0152 :  JBS   0x03, 2     
    0x0153 :  JMP   0x17C       
    0x0154 :  MOV   A, @0x64    
    0x0155 :  SUB   A, 0x29     
    0x0156 :  JBC   0x03, 0     
    0x0157 :  JMP   0x17C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 114)
  ;duty++;
    0x0158 :  INC   0x29        
    0x0159 :  JMP   0x17C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 116)
  ;else if(breathCount < 210)
    0x015A :  MOV   A, @0x00    
    0x015B :  SUB   A, 0x2B     
    0x015C :  JBS   0x03, 2     
    0x015D :  JMP   0x160       
    0x015E :  MOV   A, @0xD2    
    0x015F :  SUB   A, 0x2A     
    0x0160 :  JBC   0x03, 0     
    0x0161 :  JMP   0x165       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 118)
  ;duty = 101;
    0x0162 :  MOV   A, @0x65    
    0x0163 :  MOV   0x29, A     
    0x0164 :  JMP   0x17C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 120)
  ;else if(breathCount < 410)
    0x0165 :  MOV   A, @0x01    
    0x0166 :  SUB   A, 0x2B     
    0x0167 :  JBS   0x03, 2     
    0x0168 :  JMP   0x16B       
    0x0169 :  MOV   A, @0x9A    
    0x016A :  SUB   A, 0x2A     
    0x016B :  JBC   0x03, 0     
    0x016C :  JMP   0x17C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 122)
  ;if(breathCount % 2 == 0 && duty > 0)
    0x016D :  MOV   A, 0x2A     
    0x016E :  MOV   0x12, A     
    0x016F :  MOV   A, 0x2B     
    0x0170 :  MOV   0x13, A     
    0x0171 :  MOV   A, @0x01    
    0x0172 :  AND   0x12, A     
    0x0173 :  MOV   A, @0x00    
    0x0174 :  AND   A, 0x13     
    0x0175 :  OR    A, 0x12     
    0x0176 :  JBS   0x03, 2     
    0x0177 :  JMP   0x17C       
    0x0178 :  MOV   0x29, 0x29  
    0x0179 :  JBC   0x03, 2     
    0x017A :  JMP   0x17C       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 123)
  ;duty--;
    0x017B :  DEC   0x29        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 125)
  ;if(++breathCount > 410)
    0x017C :  MOV   A, 0x2A     
    0x017D :  MOV   0x12, A     
    0x017E :  MOV   A, 0x2B     
    0x017F :  MOV   0x13, A     
    0x0180 :  MOV   A, @0x01    
    0x0181 :  ADD   A, 0x12     
    0x0182 :  MOV   0x12, A     
    0x0183 :  JBC   0x03, 0     
    0x0184 :  INC   0x13        
    0x0185 :  MOV   A, @0x00    
    0x0186 :  ADD   0x13, A     
    0x0187 :  MOV   A, 0x12     
    0x0188 :  MOV   0x2A, A     
    0x0189 :  MOV   A, 0x13     
    0x018A :  MOV   0x2B, A     
    0x018B :  MOV   A, 0x13     
    0x018C :  SUB   A, @0x01    
    0x018D :  JBS   0x03, 2     
    0x018E :  JMP   0x191       
    0x018F :  MOV   A, 0x12     
    0x0190 :  SUB   A, @0x9A    
    0x0191 :  JBC   0x03, 0     
    0x0192 :  JMP   0x195       
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 127)
  ;breathCount = 0;
    0x0193 :  CLR   0x2B        
    0x0194 :  CLR   0x2A        
C:\mcuproject\xj\s18_1001B_sop8\PWM.c (line 129)
  ;}
    0x0195 :  MOV   A, 0x2D     
    0x0196 :  MOV   0x12, A     
    0x0197 :  MOV   A, 0x2E     
    0x0198 :  MOV   0x13, A     
    0x0199 :  RET               
