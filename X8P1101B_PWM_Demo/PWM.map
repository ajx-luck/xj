*************************************
------------- Call Depth ------------
 Depth  Interrupt    Function
-------------------------------------
    0        N         ProgramStart
    1        Y           _interrupt_l
    1        Y           _interrupt
    0        N         _main
C   1        N           _IO_Init
C   1        N           _chrgCtr
C   2        N             _keyCtr
C   3        N               _keyRead
C   3        N               _PWM_Init
C   3        N               _PWM_Stop
C   3        N               _PWM_Init
C   1        N           _ledCtr
C   1        N           _workCtr
-------------------------------------
Stack Depth: 3
****************************************
------------- Free ROM Size ------------
Start=0X3    , End=0X7    , Size=5
Start=0X31   , End=0X32   , Size=2
Start=0X14C  , End=0X3FF  , Size=692
----------------------------------------
EM78P153B       |        ROM Size        
----------------+-----------------------
Total           |  1024 x 13 bits(100.0%)
Used            |   325 x 13 bits( 31.7%)
Free            |   699 x 13 bits( 68.3%)
----------------------------------------
*************************************
-------------- Data Map -------------
d -- Uninitialized data
D -- Initialized data
b -- Uninitialized bit data
B -- Initialized bit data
C -- C Register
-------------- RAM Data -------------
0x00  - - - - - - - - - - - - - - - - 
0x10  - - - - - - - - - - - - - - - - 
0x20  b D D D D D D D d d d d C C - - 
0x30  - - - - - - - - - - - - - - - - 
----------- Register Data -----------
0x00  d d d b d b b - d d d d d d d b 
0x10  d C C C - - - - - - - - - - - - 
-------------- IO Data --------------
0x00  - - - - - d d - - - - d - d d d 
****************************************
--------------- ROM Code ---------------
    0x0000 :  JMP   0x033       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 243)
  ;PWMCON = 0x00;	//
    0x0001 :  CLR   0x08        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 244)
  ;}
    0x0002 :  RET               
    0x0003 :  ADD   A, @0xFF    
    0x0004 :  ADD   A, @0xFF    
    0x0005 :  ADD   A, @0xFF    
    0x0006 :  ADD   A, @0xFF    
    0x0007 :  ADD   A, @0xFF    
    0x0008 :  JMP   0x009       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 267)
  ;MOV 0x3D,A ;保存 A
    0x0009 :  MOV   0x10, A     
    0x000A :  SWAPA 0x04        
    0x000B :  MOV   0x2C, A     
    0x000C :  SWAPA 0x03        
    0x000D :  MOV   0x2D, A     
    0x000E :  MOV   0x3D, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 268)
  ;MOV A,0x03
    0x000F :  MOV   A, 0x03     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 269)
  ;MOV 0x3E,A ;保存 R3
    0x0010 :  MOV   0x3E, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 270)
  ;MOV A,0x04
    0x0011 :  MOV   A, 0x04     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 271)
  ;MOV 0x3F,A ;保存 R4
    0x0012 :  MOV   0x3F, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 274)
  ;if	(TCIF==1)
    0x0013 :  JBS   0x0F, 0     
    0x0014 :  JMP   0x026       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 277)
  ;ISR&=0XFE;				//清TCC中断标志位
    0x0015 :  MOV   A, @0xFE    
    0x0016 :  AND   0x0F, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 278)
  ;TCC+=6;					//TCC赋初值
    0x0017 :  MOV   A, @0x06    
    0x0018 :  ADD   0x01, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 279)
  ;if(++intCount >= 10)
    0x0019 :  INC   0x23        
    0x001A :  MOV   A, @0x0A    
    0x001B :  SUB   A, 0x23     
    0x001C :  JBS   0x03, 0     
    0x001D :  JMP   0x026       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 281)
  ;intCount = 0;		//10ms
    0x001E :  CLR   0x23        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 282)
  ;IntFlag = 1;
    0x001F :  BS    0x20, 0     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 283)
  ;if(++count500ms >=50)
    0x0020 :  INC   0x24        
    0x0021 :  MOV   A, @0x32    
    0x0022 :  SUB   A, 0x24     
    0x0023 :  JBS   0x03, 0     
    0x0024 :  JMP   0x026       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 284)
  ;count500ms = 0;
    0x0025 :  CLR   0x24        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 291)
  ;MOV A,0x3F ;返回 R4
    0x0026 :  MOV   A, 0x3F     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 292)
  ;MOV 0x04,A
    0x0027 :  MOV   0x04, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 293)
  ;MOV A,0x3E ;返回 R3
    0x0028 :  MOV   A, 0x3E     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 294)
  ;MOV 0x03,A
    0x0029 :  MOV   0x03, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 295)
  ;SWAP 0x3D  ;返回 A
    0x002A :  SWAP  0x3D        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 296)
  ;SWAPA 0x3D
    0x002B :  SWAPA 0x3D        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 298)
  ;}
    0x002C :  SWAPA 0x2D        
    0x002D :  MOV   0x03, A     
    0x002E :  SWAPA 0x2C        
    0x002F :  MOV   0x04, A     
    0x0030 :  RETI              
    0x0031 :  ADD   A, @0xFF    
    0x0032 :  ADD   A, @0xFF    
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 46)
  ;WDTC();
    0x0033 :  MOV   A, @0x00    
    0x0034 :  MOV   0x21, A     
    0x0035 :  MOV   0x22, A     
    0x0036 :  MOV   0x23, A     
    0x0037 :  MOV   0x24, A     
    0x0038 :  MOV   0x25, A     
    0x0039 :  MOV   0x26, A     
    0x003A :  MOV   0x27, A     
    0x003B :  WDTC              
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 47)
  ;DISI();
    0x003C :  DISI              
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 48)
  ;WDTCR=0;				//禁止WDT
    0x003D :  MOV   A, @0x00    
    0x003E :  IOW   0xE         
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 50)
  ;IO_Init();	            //IO初始化
    0x003F :  CALL  0x054       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 52)
  ;TCC=6;					//timer=1/8*2*(256-6)*16=1ms,TCC中断1ms定时		主频8M/2T
    0x0040 :  MOV   A, @0x06    
    0x0041 :  MOV   0x01, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 53)
  ;ISR=0;
    0x0042 :  CLR   0x0F        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 54)
  ;IMR=1;
    0x0043 :  MOV   A, @0x01    
    0x0044 :  IOW   0xF         
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 56)
  ;ENI();
    0x0045 :  ENI               
    0x0046 :  JMP   0x052       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 61)
  ;WDTC(); //清狗
    0x0047 :  WDTC              
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 62)
  ;if(!IntFlag)
    0x0048 :  JBC   0x20, 0     
    0x0049 :  JMP   0x04B       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 63)
  ;continue;
    0x004A :  JMP   0x052       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 64)
  ;IntFlag = 0;
    0x004B :  BC    0x20, 0     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 65)
  ;chrgCtr();
    0x004C :  CALL  0x061       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 66)
  ;if(count500ms == 0)
    0x004D :  MOV   0x24, 0x24  
    0x004E :  JBS   0x03, 2     
    0x004F :  JMP   0x051       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 68)
  ;ledCtr();
    0x0050 :  CALL  0x0D5       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 70)
  ;workCtr();
    0x0051 :  CALL  0x11B       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 59)
  ;while(1)
    0x0052 :  JMP   0x047       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 73)
  ;}
    0x0053 :  RET               
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 250)
  ;PORT5 = 0x00;
    0x0054 :  CLR   0x05        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 251)
  ;P5CR = 0x05;			//PORT5设为输出(0 输出,1 输入)	 P50 P52  输入
    0x0055 :  MOV   A, @0x05    
    0x0056 :  IOW   0x5         
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 252)
  ;PORT6 = 0x00;
    0x0057 :  CLR   0x06        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 253)
  ;P6CR = 0x90;			//PORT6设为输出(0 输出,1 输入)	P64 67 输入
    0x0058 :  MOV   A, @0x90    
    0x0059 :  IOW   0x6         
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 254)
  ;PDCR = 0xFE;			//P50d打开下拉
    0x005A :  MOV   A, @0xFE    
    0x005B :  IOW   0xB         
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 255)
  ;PHCR = 0x7F;				//67打开上拉
    0x005C :  MOV   A, @0x7F    
    0x005D :  IOW   0xD         
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 257)
  ;mov	a,@0x03			//TCC分频比设为1：16
    0x005E :  MOV   A, @0x03    
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 258)
  ;contw
    0x005F :  CONTW             
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 260)
  ;}
    0x0060 :  RET               
    0x0061 :  MOV   A, 0x12     
    0x0062 :  MOV   0x2A, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 208)
  ;if(P50)
    0x0063 :  JBS   0x05, 0     
    0x0064 :  JMP   0x077       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 211)
  ;if(P50)
    0x0065 :  JBS   0x05, 0     
    0x0066 :  JMP   0x06A       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 214)
  ;P51 = 1;
    0x0067 :  BS    0x05, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 215)
  ;P53 = 0;
    0x0068 :  BC    0x05, 3     
    0x0069 :  JMP   0x07A       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 219)
  ;P51 = 0;
    0x006A :  BC    0x05, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 221)
  ;P53 = !P53;
    0x006B :  JBC   0x05, 3     
    0x006C :  JMP   0x070       
    0x006D :  MOV   A, @0x01    
    0x006E :  MOV   0x29, A     
    0x006F :  JMP   0x071       
    0x0070 :  CLR   0x29        
    0x0071 :  MOV   A, 0x29     
    0x0072 :  MOV   0x12, A     
    0x0073 :  BC    0x05, 3     
    0x0074 :  JBC   0x12, 0     
    0x0075 :  BS    0x05, 3     
    0x0076 :  JMP   0x07A       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 226)
  ;P51 = 0;
    0x0077 :  BC    0x05, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 227)
  ;P53 = 0;
    0x0078 :  BC    0x05, 3     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 228)
  ;keyCtr();
    0x0079 :  CALL  0x07D       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 230)
  ;}
    0x007A :  MOV   A, 0x2A     
    0x007B :  MOV   0x12, A     
    0x007C :  RET               
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 141)
  ;char kclick = keyRead();
    0x007D :  CALL  0x0A8       
    0x007E :  MOV   A, 0x11     
    0x007F :  MOV   0x2B, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 142)
  ;if(kclick == 1 && workStep > 0)
    0x0080 :  MOV   A, 0x2B     
    0x0081 :  XOR   A, @0x01    
    0x0082 :  JBS   0x03, 2     
    0x0083 :  JMP   0x094       
    0x0084 :  MOV   0x26, 0x26  
    0x0085 :  JBC   0x03, 2     
    0x0086 :  JMP   0x094       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 144)
  ;count500ms = 0;
    0x0087 :  CLR   0x24        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 145)
  ;if(++workStep > 4)
    0x0088 :  INC   0x26        
    0x0089 :  MOV   A, 0x26     
    0x008A :  SUB   A, @0x04    
    0x008B :  JBC   0x03, 0     
    0x008C :  JMP   0x08F       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 146)
  ;workStep = 1;
    0x008D :  MOV   A, @0x01    
    0x008E :  MOV   0x26, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 147)
  ;PWM_Init();
    0x008F :  CALL  0x0CC       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 148)
  ;duty = 1;
    0x0090 :  MOV   A, @0x01    
    0x0091 :  MOV   0x21, A     
    0x0092 :  CLR   0x22        
    0x0093 :  JMP   0x0A7       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 151)
  ;else if(kclick == 2)
    0x0094 :  MOV   A, 0x2B     
    0x0095 :  XOR   A, @0x02    
    0x0096 :  JBS   0x03, 2     
    0x0097 :  JMP   0x0A7       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 153)
  ;if(workStep > 0)
    0x0098 :  MOV   0x26, 0x26  
    0x0099 :  JBC   0x03, 2     
    0x009A :  JMP   0x09E       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 155)
  ;workStep = 0;
    0x009B :  CLR   0x26        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 156)
  ;PWM_Stop();
    0x009C :  CALL  0x001       
    0x009D :  JMP   0x0A7       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 160)
  ;workStep = 1;
    0x009E :  MOV   A, @0x01    
    0x009F :  MOV   0x26, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 161)
  ;ledStep = 4;
    0x00A0 :  MOV   A, @0x04    
    0x00A1 :  MOV   0x27, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 162)
  ;count500ms = 0;
    0x00A2 :  CLR   0x24        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 163)
  ;PWM_Init();
    0x00A3 :  CALL  0x0CC       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 164)
  ;duty = 1;
    0x00A4 :  MOV   A, @0x01    
    0x00A5 :  MOV   0x21, A     
    0x00A6 :  CLR   0x22        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 168)
  ;}
    0x00A7 :  RET               
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 173)
  ;if(P67 == 0)
    0x00A8 :  JBC   0x06, 7     
    0x00A9 :  JMP   0x0B7       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 175)
  ;keyCount++;
    0x00AA :  INC   0x25        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 176)
  ;if(keyCount >= 200)
    0x00AB :  MOV   A, @0xC8    
    0x00AC :  SUB   A, 0x25     
    0x00AD :  JBS   0x03, 0     
    0x00AE :  JMP   0x0C9       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 178)
  ;keyCount = 200;
    0x00AF :  MOV   A, @0xC8    
    0x00B0 :  MOV   0x25, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 179)
  ;if(!longPressFlag)
    0x00B1 :  JBC   0x20, 1     
    0x00B2 :  JMP   0x0C9       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 181)
  ;longPressFlag = 1;
    0x00B3 :  BS    0x20, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 182)
  ;return 2;
    0x00B4 :  MOV   A, @0x02    
    0x00B5 :  MOV   0x11, A     
    0x00B6 :  JMP   0x0CB       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 188)
  ;if(keyCount >= 200)
    0x00B7 :  MOV   A, @0xC8    
    0x00B8 :  SUB   A, 0x25     
    0x00B9 :  JBS   0x03, 0     
    0x00BA :  JMP   0x0C0       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 190)
  ;keyCount = 0;
    0x00BB :  CLR   0x25        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 191)
  ;longPressFlag = 0;
    0x00BC :  BC    0x20, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 192)
  ;return	0;
    0x00BD :  MOV   A, @0x00    
    0x00BE :  MOV   0x11, A     
    0x00BF :  JMP   0x0CB       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 194)
  ;else if(keyCount >= 8)
    0x00C0 :  MOV   A, @0x08    
    0x00C1 :  SUB   A, 0x25     
    0x00C2 :  JBS   0x03, 0     
    0x00C3 :  JMP   0x0C8       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 196)
  ;keyCount = 0;
    0x00C4 :  CLR   0x25        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 197)
  ;return	1;
    0x00C5 :  MOV   A, @0x01    
    0x00C6 :  MOV   0x11, A     
    0x00C7 :  JMP   0x0CB       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 199)
  ;keyCount = 0;
    0x00C8 :  CLR   0x25        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 201)
  ;return 0;
    0x00C9 :  MOV   A, @0x00    
    0x00CA :  MOV   0x11, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 202)
  ;}
    0x00CB :  RET               
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 235)
  ;PRD = 128;				//设置周期		1/8*4*136=68us = 14.7K
    0x00CC :  MOV   A, @0x80    
    0x00CD :  MOV   0x09, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 236)
  ;PDC1 = 1;				//设置占空比
    0x00CE :  MOV   A, @0x01    
    0x00CF :  MOV   0x0A, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 237)
  ;CPUCON = 0B01000000;	//PWM选择系统时钟8M
    0x00D0 :  MOV   A, @0x40    
    0x00D1 :  MOV   0x0E, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 238)
  ;PWMCON = 0B00011001;	//4分频
    0x00D2 :  MOV   A, @0x19    
    0x00D3 :  MOV   0x08, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 239)
  ;}
    0x00D4 :  RET               
    0x00D5 :  MOV   A, 0x12     
    0x00D6 :  MOV   0x29, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 86)
  ;if(ledStep)
    0x00D7 :  MOV   0x27, 0x27  
    0x00D8 :  JBC   0x03, 2     
    0x00D9 :  JMP   0x0F3       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 89)
  ;if(ledStep == 4)
    0x00DA :  MOV   A, 0x27     
    0x00DB :  XOR   A, @0x04    
    0x00DC :  JBS   0x03, 2     
    0x00DD :  JMP   0x0E0       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 91)
  ;LED1ON();
    0x00DE :  BS    0x06, 1     
    0x00DF :  JMP   0x0F1       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 93)
  ;else if(ledStep == 3)
    0x00E0 :  MOV   A, 0x27     
    0x00E1 :  XOR   A, @0x03    
    0x00E2 :  JBS   0x03, 2     
    0x00E3 :  JMP   0x0E6       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 95)
  ;LED2ON();
    0x00E4 :  BS    0x06, 0     
    0x00E5 :  JMP   0x0F1       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 97)
  ;else if(ledStep == 2)
    0x00E6 :  MOV   A, 0x27     
    0x00E7 :  XOR   A, @0x02    
    0x00E8 :  JBS   0x03, 2     
    0x00E9 :  JMP   0x0EC       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 99)
  ;LED3ON();
    0x00EA :  BS    0x06, 6     
    0x00EB :  JMP   0x0F1       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 101)
  ;else if(ledStep == 1)
    0x00EC :  MOV   A, 0x27     
    0x00ED :  XOR   A, @0x01    
    0x00EE :  JBS   0x03, 2     
    0x00EF :  JMP   0x0F1       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 103)
  ;LED4ON();
    0x00F0 :  BS    0x06, 5     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 105)
  ;ledStep--;
    0x00F1 :  DEC   0x27        
    0x00F2 :  JMP   0x118       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 110)
  ;switch(workStep)
    0x00F3 :  MOV   A, 0x26     
    0x00F4 :  MOV   0x12, A     
    0x00F5 :  MOV   0x12, 0x12  
    0x00F6 :  JBC   0x03, 2     
    0x00F7 :  JMP   0x109       
    0x00F8 :  MOV   A, 0x12     
    0x00F9 :  XOR   A, @0x01    
    0x00FA :  JBC   0x03, 2     
    0x00FB :  JMP   0x10E       
    0x00FC :  MOV   A, 0x12     
    0x00FD :  XOR   A, @0x02    
    0x00FE :  JBC   0x03, 2     
    0x00FF :  JMP   0x113       
    0x0100 :  MOV   A, 0x12     
    0x0101 :  XOR   A, @0x03    
    0x0102 :  JBC   0x03, 2     
    0x0103 :  JMP   0x115       
    0x0104 :  MOV   A, 0x12     
    0x0105 :  XOR   A, @0x04    
    0x0106 :  JBC   0x03, 2     
    0x0107 :  JMP   0x117       
    0x0108 :  JMP   0x118       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 113)
  ;P60=0;
    0x0109 :  BC    0x06, 0     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 114)
  ;P61=0;
    0x010A :  BC    0x06, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 115)
  ;P65=0;
    0x010B :  BC    0x06, 5     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 116)
  ;P66=0;
    0x010C :  BC    0x06, 6     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 117)
  ;break;
    0x010D :  JMP   0x118       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 119)
  ;LED1ON();
    0x010E :  BS    0x06, 1     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 120)
  ;LED2OFF();
    0x010F :  BC    0x06, 0     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 121)
  ;LED3OFF();
    0x0110 :  BC    0x06, 6     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 122)
  ;LED4OFF();
    0x0111 :  BC    0x06, 5     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 123)
  ;break;
    0x0112 :  JMP   0x118       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 125)
  ;LED2ON();
    0x0113 :  BS    0x06, 0     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 126)
  ;break;
    0x0114 :  JMP   0x118       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 128)
  ;LED3ON();
    0x0115 :  BS    0x06, 6     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 129)
  ;break;
    0x0116 :  JMP   0x118       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 131)
  ;LED4ON();
    0x0117 :  BS    0x06, 5     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 136)
  ;}
    0x0118 :  MOV   A, 0x29     
    0x0119 :  MOV   0x12, A     
    0x011A :  RET               
    0x011B :  MOV   A, 0x12     
    0x011C :  MOV   0x29, A     
    0x011D :  MOV   A, 0x13     
    0x011E :  MOV   0x2A, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 78)
  ;if(++duty > 120)
    0x011F :  MOV   A, 0x21     
    0x0120 :  MOV   0x12, A     
    0x0121 :  MOV   A, 0x22     
    0x0122 :  MOV   0x13, A     
    0x0123 :  MOV   A, @0x01    
    0x0124 :  ADD   A, 0x12     
    0x0125 :  MOV   0x12, A     
    0x0126 :  JBC   0x03, 0     
    0x0127 :  INC   0x13        
    0x0128 :  MOV   A, @0x00    
    0x0129 :  ADD   0x13, A     
    0x012A :  MOV   A, 0x12     
    0x012B :  MOV   0x21, A     
    0x012C :  MOV   A, 0x13     
    0x012D :  MOV   0x22, A     
    0x012E :  MOV   A, 0x13     
    0x012F :  SUB   A, @0x00    
    0x0130 :  JBS   0x03, 2     
    0x0131 :  JMP   0x134       
    0x0132 :  MOV   A, 0x12     
    0x0133 :  SUB   A, @0x78    
    0x0134 :  JBC   0x03, 0     
    0x0135 :  JMP   0x139       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 79)
  ;duty = 120;
    0x0136 :  MOV   A, @0x78    
    0x0137 :  MOV   0x21, A     
    0x0138 :  CLR   0x22        
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 80)
  ;if(duty < 120)
    0x0139 :  MOV   A, @0x00    
    0x013A :  SUB   A, 0x22     
    0x013B :  JBS   0x03, 2     
    0x013C :  JMP   0x13F       
    0x013D :  MOV   A, @0x78    
    0x013E :  SUB   A, 0x21     
    0x013F :  JBC   0x03, 0     
    0x0140 :  JMP   0x147       
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 81)
  ;PDC1 = duty;
    0x0141 :  MOV   A, 0x21     
    0x0142 :  MOV   0x12, A     
    0x0143 :  MOV   A, 0x22     
    0x0144 :  MOV   0x13, A     
    0x0145 :  MOV   A, 0x12     
    0x0146 :  MOV   0x0A, A     
C:\mcuproject\xj\X8P1101B_PWM_Demo\PWM.c (line 82)
  ;}
    0x0147 :  MOV   A, 0x29     
    0x0148 :  MOV   0x12, A     
    0x0149 :  MOV   A, 0x2A     
    0x014A :  MOV   0x13, A     
    0x014B :  RET               
