*************************************
------------- Call Depth ------------
 Depth  Interrupt    Function
-------------------------------------
    0        N         ProgramStart
    1        Y           _interrupt_l
    1        Y           _interrupt
    0        N         _main
C   1        N           _IO_Init
C   1        N           _keyCtr
C   2        N             _keyRead
C   1        N           _workCtr
C   2        N             _gotoSleep
C   2        N             _gotoSleep
-------------------------------------
Stack Depth: 2
****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X7    , Size=7
Start=0X35   , End=0X36   , Size=2
Start=0X11F  , End=0X3FF  , Size=737
----------------------------------------
EM78P153B       |        ROM Size        
----------------+-----------------------
Total           |  1024 x 13 bits(100.0%)
Used            |   278 x 13 bits( 27.1%)
Free            |   746 x 13 bits( 72.9%)
----------------------------------------
*************************************
-------------- Data Map -------------
d -- Uninitialized data
D -- Initialized data
b -- Uninitialized bit data
B -- Initialized bit data
C -- C Register
-------------- RAM Data -------------
0x00  - - - - - - - - - - - - - - - - 
0x10  - - - - - - - - - - - - - - - - 
0x20  b D D D D D D D D d d d d C C - 
0x30  - - - - - - - - - - - - - - - - 
----------- Register Data -----------
0x00  d d d b d b b - d d d d d d d b 
0x10  d C C C C - - - - - - - - - - - 
-------------- IO Data --------------
0x00  - - - - - d d - - d - d - d d d 
****************************************
--------------- ROM Code ---------------
    0x0000 :  JMP   0x037       
    0x0001 :  ADD   A, @0xFF    
    0x0002 :  ADD   A, @0xFF    
    0x0003 :  ADD   A, @0xFF    
    0x0004 :  ADD   A, @0xFF    
    0x0005 :  ADD   A, @0xFF    
    0x0006 :  ADD   A, @0xFF    
    0x0007 :  ADD   A, @0xFF    
    0x0008 :  JMP   0x009       
C:\mcuproject\xj\motor0910\PWM.c (line 222)
  ;MOV 0x3D,A ;保存 A
    0x0009 :  MOV   0x10, A     
    0x000A :  SWAPA 0x04        
    0x000B :  MOV   0x2D, A     
    0x000C :  SWAPA 0x03        
    0x000D :  MOV   0x2E, A     
    0x000E :  MOV   0x3D, A     
C:\mcuproject\xj\motor0910\PWM.c (line 223)
  ;MOV A,0x03
    0x000F :  MOV   A, 0x03     
C:\mcuproject\xj\motor0910\PWM.c (line 224)
  ;MOV 0x3E,A ;保存 R3
    0x0010 :  MOV   0x3E, A     
C:\mcuproject\xj\motor0910\PWM.c (line 225)
  ;MOV A,0x04
    0x0011 :  MOV   A, 0x04     
C:\mcuproject\xj\motor0910\PWM.c (line 226)
  ;MOV 0x3F,A ;保存 R4
    0x0012 :  MOV   0x3F, A     
C:\mcuproject\xj\motor0910\PWM.c (line 229)
  ;if	(TCIF==1)
    0x0013 :  JBS   0x0F, 0     
    0x0014 :  JMP   0x02A       
C:\mcuproject\xj\motor0910\PWM.c (line 232)
  ;ISR&=0XFE;				//清TCC中断标志位
    0x0015 :  MOV   A, @0xFE    
    0x0016 :  AND   0x0F, A     
C:\mcuproject\xj\motor0910\PWM.c (line 233)
  ;TCC+=206;					//TCC赋初值 0.2ms
    0x0017 :  MOV   A, @0xCE    
    0x0018 :  ADD   0x01, A     
C:\mcuproject\xj\motor0910\PWM.c (line 235)
  ;if(++intCount >= 100)
    0x0019 :  INC   0x21        
    0x001A :  MOV   A, @0x64    
    0x001B :  SUB   A, 0x21     
    0x001C :  JBS   0x03, 0     
    0x001D :  JMP   0x02A       
C:\mcuproject\xj\motor0910\PWM.c (line 237)
  ;intCount = 0;		//10ms
    0x001E :  CLR   0x21        
C:\mcuproject\xj\motor0910\PWM.c (line 238)
  ;IntFlag = 1;
    0x001F :  BS    0x20, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 240)
  ;if(workStep)
    0x0020 :  MOV   0x26, 0x26  
    0x0021 :  JBC   0x03, 2     
    0x0022 :  JMP   0x02A       
C:\mcuproject\xj\motor0910\PWM.c (line 242)
  ;if(++count1s>= 100)
    0x0023 :  INC   0x24        
    0x0024 :  MOV   A, @0x64    
    0x0025 :  SUB   A, 0x24     
    0x0026 :  JBS   0x03, 0     
    0x0027 :  JMP   0x02A       
C:\mcuproject\xj\motor0910\PWM.c (line 244)
  ;count1s = 0;
    0x0028 :  CLR   0x24        
C:\mcuproject\xj\motor0910\PWM.c (line 245)
  ;count900s++;
    0x0029 :  INC   0x25        
C:\mcuproject\xj\motor0910\PWM.c (line 256)
  ;MOV A,0x3F ;返回 R4
    0x002A :  MOV   A, 0x3F     
C:\mcuproject\xj\motor0910\PWM.c (line 257)
  ;MOV 0x04,A
    0x002B :  MOV   0x04, A     
C:\mcuproject\xj\motor0910\PWM.c (line 258)
  ;MOV A,0x3E ;返回 R3
    0x002C :  MOV   A, 0x3E     
C:\mcuproject\xj\motor0910\PWM.c (line 259)
  ;MOV 0x03,A
    0x002D :  MOV   0x03, A     
C:\mcuproject\xj\motor0910\PWM.c (line 260)
  ;SWAP 0x3D  ;返回 A
    0x002E :  SWAP  0x3D        
C:\mcuproject\xj\motor0910\PWM.c (line 261)
  ;SWAPA 0x3D
    0x002F :  SWAPA 0x3D        
C:\mcuproject\xj\motor0910\PWM.c (line 263)
  ;}
    0x0030 :  SWAPA 0x2E        
    0x0031 :  MOV   0x03, A     
    0x0032 :  SWAPA 0x2D        
    0x0033 :  MOV   0x04, A     
    0x0034 :  RETI              
    0x0035 :  ADD   A, @0xFF    
    0x0036 :  ADD   A, @0xFF    
C:\mcuproject\xj\motor0910\PWM.c (line 54)
  ;WDTC();
    0x0037 :  MOV   A, @0x00    
    0x0038 :  MOV   0x21, A     
    0x0039 :  MOV   0x22, A     
    0x003A :  MOV   0x23, A     
    0x003B :  MOV   0x24, A     
    0x003C :  MOV   0x25, A     
    0x003D :  MOV   0x26, A     
    0x003E :  MOV   0x27, A     
    0x003F :  MOV   0x28, A     
    0x0040 :  WDTC              
C:\mcuproject\xj\motor0910\PWM.c (line 55)
  ;DISI();
    0x0041 :  DISI              
C:\mcuproject\xj\motor0910\PWM.c (line 56)
  ;WDTCR=0x80;
    0x0042 :  MOV   A, @0x80    
    0x0043 :  IOW   0xE         
C:\mcuproject\xj\motor0910\PWM.c (line 57)
  ;workStep = 0;
    0x0044 :  CLR   0x26        
C:\mcuproject\xj\motor0910\PWM.c (line 59)
  ;IO_Init();	            //IO初始化
    0x0045 :  CALL  0x060       
C:\mcuproject\xj\motor0910\PWM.c (line 60)
  ;TCC=206;					//timer=1/8*2*(256-6)*16=1ms,TCC中断1ms定时		主频8M/2T
    0x0046 :  MOV   A, @0xCE    
    0x0047 :  MOV   0x01, A     
C:\mcuproject\xj\motor0910\PWM.c (line 61)
  ;ISR=0;
    0x0048 :  CLR   0x0F        
C:\mcuproject\xj\motor0910\PWM.c (line 62)
  ;IMR=1;
    0x0049 :  MOV   A, @0x01    
    0x004A :  IOW   0xF         
C:\mcuproject\xj\motor0910\PWM.c (line 63)
  ;duty = 0;
    0x004B :  CLR   0x22        
C:\mcuproject\xj\motor0910\PWM.c (line 64)
  ;ENI();
    0x004C :  ENI               
C:\mcuproject\xj\motor0910\PWM.c (line 69)
  ;P50 = 0;
    0x004D :  BC    0x05, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 70)
  ;for(i=0;i<duty;i++)
    0x004E :  CLR   0x29        
    0x004F :  JMP   0x053       
C:\mcuproject\xj\motor0910\PWM.c (line 72)
  ;P50 = 1;
    0x0050 :  BS    0x05, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 73)
  ;NOP();
    0x0051 :  NOP               
C:\mcuproject\xj\motor0910\PWM.c (line 74)
  ;}
    0x0052 :  INC   0x29        
C:\mcuproject\xj\motor0910\PWM.c (line 70)
  ;for(i=0;i<duty;i++)
    0x0053 :  MOV   A, 0x22     
    0x0054 :  SUB   A, 0x29     
    0x0055 :  JBS   0x03, 0     
    0x0056 :  JMP   0x050       
C:\mcuproject\xj\motor0910\PWM.c (line 75)
  ;WDTC(); //清狗
    0x0057 :  WDTC              
C:\mcuproject\xj\motor0910\PWM.c (line 76)
  ;if(!IntFlag)
    0x0058 :  JBC   0x20, 0     
    0x0059 :  JMP   0x05B       
C:\mcuproject\xj\motor0910\PWM.c (line 77)
  ;continue;
    0x005A :  JMP   0x04D       
C:\mcuproject\xj\motor0910\PWM.c (line 78)
  ;IntFlag = 0;
    0x005B :  BC    0x20, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 79)
  ;keyCtr();
    0x005C :  CALL  0x06B       
C:\mcuproject\xj\motor0910\PWM.c (line 80)
  ;workCtr();
    0x005D :  CALL  0x0AE       
C:\mcuproject\xj\motor0910\PWM.c (line 81)
  ;}
    0x005E :  JMP   0x04D       
C:\mcuproject\xj\motor0910\PWM.c (line 83)
  ;}
    0x005F :  RET               
C:\mcuproject\xj\motor0910\PWM.c (line 206)
  ;PORT5 = 0x00;
    0x0060 :  CLR   0x05        
C:\mcuproject\xj\motor0910\PWM.c (line 207)
  ;P5CR = 0x00;			//PORT5设为输出(0 输出,1 输入)
    0x0061 :  MOV   A, @0x00    
    0x0062 :  IOW   0x5         
C:\mcuproject\xj\motor0910\PWM.c (line 208)
  ;PORT6 = 0x00;
    0x0063 :  CLR   0x06        
C:\mcuproject\xj\motor0910\PWM.c (line 209)
  ;P6CR = 0x80;			//PORT6设为输出(0 输出,1 输入)
    0x0064 :  MOV   A, @0x80    
    0x0065 :  IOW   0x6         
C:\mcuproject\xj\motor0910\PWM.c (line 210)
  ;PHCR = 0x7F;
    0x0066 :  MOV   A, @0x7F    
    0x0067 :  IOW   0xD         
C:\mcuproject\xj\motor0910\PWM.c (line 212)
  ;mov	a,@0x02			//TCC分频比设为1：8
    0x0068 :  MOV   A, @0x02    
C:\mcuproject\xj\motor0910\PWM.c (line 213)
  ;contw
    0x0069 :  CONTW             
C:\mcuproject\xj\motor0910\PWM.c (line 215)
  ;}
    0x006A :  RET               
    0x006B :  MOV   A, 0x12     
    0x006C :  MOV   0x2B, A     
C:\mcuproject\xj\motor0910\PWM.c (line 88)
  ;char kclick = keyRead(0x80 & (~PORT6));
    0x006D :  MOV   A, 0x06     
    0x006E :  MOV   0x12, A     
    0x006F :  COM   0x12        
    0x0070 :  MOV   A, @0x80    
    0x0071 :  AND   A, 0x12     
    0x0072 :  MOV   0x2C, A     
    0x0073 :  CALL  0x089       
    0x0074 :  MOV   A, 0x11     
    0x0075 :  MOV   0x2A, A     
C:\mcuproject\xj\motor0910\PWM.c (line 90)
  ;if(kclick == 1)
    0x0076 :  MOV   A, 0x2A     
    0x0077 :  XOR   A, @0x01    
    0x0078 :  JBS   0x03, 2     
    0x0079 :  JMP   0x081       
C:\mcuproject\xj\motor0910\PWM.c (line 94)
  ;if(++workStep >= 7)
    0x007A :  INC   0x26        
    0x007B :  MOV   A, @0x07    
    0x007C :  SUB   A, 0x26     
    0x007D :  JBS   0x03, 0     
    0x007E :  JMP   0x086       
C:\mcuproject\xj\motor0910\PWM.c (line 95)
  ;workStep = 0;
    0x007F :  CLR   0x26        
    0x0080 :  JMP   0x086       
C:\mcuproject\xj\motor0910\PWM.c (line 98)
  ;else if(kclick == 2)
    0x0081 :  MOV   A, 0x2A     
    0x0082 :  XOR   A, @0x02    
    0x0083 :  JBS   0x03, 2     
    0x0084 :  JMP   0x086       
C:\mcuproject\xj\motor0910\PWM.c (line 100)
  ;workStep = 0;
    0x0085 :  CLR   0x26        
C:\mcuproject\xj\motor0910\PWM.c (line 105)
  ;}
    0x0086 :  MOV   A, 0x2B     
    0x0087 :  MOV   0x12, A     
    0x0088 :  RET               
C:\mcuproject\xj\motor0910\PWM.c (line 152)
  ;if(keyStatus)
    0x0089 :  MOV   0x2C, 0x2C  
    0x008A :  JBC   0x03, 2     
    0x008B :  JMP   0x099       
C:\mcuproject\xj\motor0910\PWM.c (line 154)
  ;keyCount++;
    0x008C :  INC   0x27        
C:\mcuproject\xj\motor0910\PWM.c (line 155)
  ;if(keyCount >= 200)
    0x008D :  MOV   A, @0xC8    
    0x008E :  SUB   A, 0x27     
    0x008F :  JBS   0x03, 0     
    0x0090 :  JMP   0x0AB       
C:\mcuproject\xj\motor0910\PWM.c (line 157)
  ;keyCount = 200;
    0x0091 :  MOV   A, @0xC8    
    0x0092 :  MOV   0x27, A     
C:\mcuproject\xj\motor0910\PWM.c (line 158)
  ;if(!longPressFlag)
    0x0093 :  JBC   0x20, 1     
    0x0094 :  JMP   0x0AB       
C:\mcuproject\xj\motor0910\PWM.c (line 160)
  ;longPressFlag = 1;
    0x0095 :  BS    0x20, 1     
C:\mcuproject\xj\motor0910\PWM.c (line 161)
  ;return 2;
    0x0096 :  MOV   A, @0x02    
    0x0097 :  MOV   0x11, A     
    0x0098 :  JMP   0x0AD       
C:\mcuproject\xj\motor0910\PWM.c (line 167)
  ;if(keyCount >= 200)
    0x0099 :  MOV   A, @0xC8    
    0x009A :  SUB   A, 0x27     
    0x009B :  JBS   0x03, 0     
    0x009C :  JMP   0x0A2       
C:\mcuproject\xj\motor0910\PWM.c (line 169)
  ;keyCount = 0;
    0x009D :  CLR   0x27        
C:\mcuproject\xj\motor0910\PWM.c (line 170)
  ;longPressFlag = 0;
    0x009E :  BC    0x20, 1     
C:\mcuproject\xj\motor0910\PWM.c (line 171)
  ;return	0;
    0x009F :  MOV   A, @0x00    
    0x00A0 :  MOV   0x11, A     
    0x00A1 :  JMP   0x0AD       
C:\mcuproject\xj\motor0910\PWM.c (line 173)
  ;else if(keyCount >= 8)
    0x00A2 :  MOV   A, @0x08    
    0x00A3 :  SUB   A, 0x27     
    0x00A4 :  JBS   0x03, 0     
    0x00A5 :  JMP   0x0AA       
C:\mcuproject\xj\motor0910\PWM.c (line 175)
  ;keyCount = 0;
    0x00A6 :  CLR   0x27        
C:\mcuproject\xj\motor0910\PWM.c (line 176)
  ;return	1;
    0x00A7 :  MOV   A, @0x01    
    0x00A8 :  MOV   0x11, A     
    0x00A9 :  JMP   0x0AD       
C:\mcuproject\xj\motor0910\PWM.c (line 178)
  ;keyCount = 0;
    0x00AA :  CLR   0x27        
C:\mcuproject\xj\motor0910\PWM.c (line 180)
  ;return 0;
    0x00AB :  MOV   A, @0x00    
    0x00AC :  MOV   0x11, A     
C:\mcuproject\xj\motor0910\PWM.c (line 181)
  ;}
    0x00AD :  RET               
    0x00AE :  MOV   A, 0x12     
    0x00AF :  MOV   0x2A, A     
    0x00B0 :  MOV   A, 0x13     
    0x00B1 :  MOV   0x2B, A     
C:\mcuproject\xj\motor0910\PWM.c (line 109)
  ;switch(workStep)
    0x00B2 :  MOV   A, 0x26     
    0x00B3 :  MOV   0x12, A     
    0x00B4 :  MOV   0x12, 0x12  
    0x00B5 :  JBC   0x03, 2     
    0x00B6 :  JMP   0x0D0       
    0x00B7 :  MOV   A, 0x12     
    0x00B8 :  XOR   A, @0x01    
    0x00B9 :  JBC   0x03, 2     
    0x00BA :  JMP   0x0DB       
    0x00BB :  MOV   A, 0x12     
    0x00BC :  XOR   A, @0x02    
    0x00BD :  JBC   0x03, 2     
    0x00BE :  JMP   0x0DF       
    0x00BF :  MOV   A, 0x12     
    0x00C0 :  XOR   A, @0x03    
    0x00C1 :  JBC   0x03, 2     
    0x00C2 :  JMP   0x0E3       
    0x00C3 :  MOV   A, 0x12     
    0x00C4 :  XOR   A, @0x04    
    0x00C5 :  JBC   0x03, 2     
    0x00C6 :  JMP   0x0E7       
    0x00C7 :  MOV   A, 0x12     
    0x00C8 :  XOR   A, @0x05    
    0x00C9 :  JBC   0x03, 2     
    0x00CA :  JMP   0x0EB       
    0x00CB :  MOV   A, 0x12     
    0x00CC :  XOR   A, @0x06    
    0x00CD :  JBC   0x03, 2     
    0x00CE :  JMP   0x0EF       
    0x00CF :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 112)
  ;duty = 0;
    0x00D0 :  CLR   0x22        
C:\mcuproject\xj\motor0910\PWM.c (line 113)
  ;LAOFF();
    0x00D1 :  MOV   A, @0xF1    
    0x00D2 :  AND   0x05, A     
C:\mcuproject\xj\motor0910\PWM.c (line 114)
  ;LBOFF();
    0x00D3 :  MOV   A, @0xF8    
    0x00D4 :  AND   0x06, A     
C:\mcuproject\xj\motor0910\PWM.c (line 115)
  ;PB5OFF();
    0x00D5 :  BC    0x05, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 116)
  ;if(keyCount == 0)
    0x00D6 :  MOV   0x27, 0x27  
    0x00D7 :  JBS   0x03, 2     
    0x00D8 :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 117)
  ;gotoSleep();
    0x00D9 :  CALL  0x109       
C:\mcuproject\xj\motor0910\PWM.c (line 118)
  ;break;
    0x00DA :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 120)
  ;duty = 6;
    0x00DB :  MOV   A, @0x06    
    0x00DC :  MOV   0x22, A     
C:\mcuproject\xj\motor0910\PWM.c (line 121)
  ;L1ON();
    0x00DD :  BS    0x05, 1     
C:\mcuproject\xj\motor0910\PWM.c (line 122)
  ;break;
    0x00DE :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 124)
  ;duty = 9;
    0x00DF :  MOV   A, @0x09    
    0x00E0 :  MOV   0x22, A     
C:\mcuproject\xj\motor0910\PWM.c (line 125)
  ;L2ON();
    0x00E1 :  BS    0x05, 2     
C:\mcuproject\xj\motor0910\PWM.c (line 126)
  ;break;
    0x00E2 :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 128)
  ;duty = 13;
    0x00E3 :  MOV   A, @0x0D    
    0x00E4 :  MOV   0x22, A     
C:\mcuproject\xj\motor0910\PWM.c (line 129)
  ;L3ON();
    0x00E5 :  BS    0x05, 3     
C:\mcuproject\xj\motor0910\PWM.c (line 130)
  ;break;
    0x00E6 :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 132)
  ;duty = 17;
    0x00E7 :  MOV   A, @0x11    
    0x00E8 :  MOV   0x22, A     
C:\mcuproject\xj\motor0910\PWM.c (line 133)
  ;L4ON();
    0x00E9 :  BS    0x06, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 134)
  ;break;
    0x00EA :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 136)
  ;duty = 22;
    0x00EB :  MOV   A, @0x16    
    0x00EC :  MOV   0x22, A     
C:\mcuproject\xj\motor0910\PWM.c (line 137)
  ;L5ON();
    0x00ED :  BS    0x06, 1     
C:\mcuproject\xj\motor0910\PWM.c (line 138)
  ;break;
    0x00EE :  JMP   0x0F2       
C:\mcuproject\xj\motor0910\PWM.c (line 140)
  ;duty = 28;
    0x00EF :  MOV   A, @0x1C    
    0x00F0 :  MOV   0x22, A     
C:\mcuproject\xj\motor0910\PWM.c (line 141)
  ;L6ON();
    0x00F1 :  BS    0x06, 2     
C:\mcuproject\xj\motor0910\PWM.c (line 145)
  ;if(count900s >= 900 && keyCount == 0)
    0x00F2 :  MOV   A, 0x25     
    0x00F3 :  MOV   0x12, A     
    0x00F4 :  CLR   0x13        
    0x00F5 :  MOV   A, @0x80    
    0x00F6 :  XOR   A, 0x13     
    0x00F7 :  MOV   0x14, A     
    0x00F8 :  MOV   A, @0x83    
    0x00F9 :  SUB   A, 0x14     
    0x00FA :  JBS   0x03, 2     
    0x00FB :  JMP   0x0FE       
    0x00FC :  MOV   A, @0x84    
    0x00FD :  SUB   A, 0x12     
    0x00FE :  JBS   0x03, 0     
    0x00FF :  JMP   0x104       
    0x0100 :  MOV   0x27, 0x27  
    0x0101 :  JBS   0x03, 2     
    0x0102 :  JMP   0x104       
C:\mcuproject\xj\motor0910\PWM.c (line 146)
  ;gotoSleep();
    0x0103 :  CALL  0x109       
C:\mcuproject\xj\motor0910\PWM.c (line 147)
  ;}
    0x0104 :  MOV   A, 0x2A     
    0x0105 :  MOV   0x12, A     
    0x0106 :  MOV   A, 0x2B     
    0x0107 :  MOV   0x13, A     
    0x0108 :  RET               
C:\mcuproject\xj\motor0910\PWM.c (line 185)
  ;P65 = 0;
    0x0109 :  BC    0x06, 5     
C:\mcuproject\xj\motor0910\PWM.c (line 186)
  ;P50 = 0;
    0x010A :  BC    0x05, 0     
C:\mcuproject\xj\motor0910\PWM.c (line 187)
  ;count900s = 0;
    0x010B :  CLR   0x25        
C:\mcuproject\xj\motor0910\PWM.c (line 188)
  ;workStep = 0;
    0x010C :  CLR   0x26        
C:\mcuproject\xj\motor0910\PWM.c (line 189)
  ;WDTCR=0x00;//禁止WDT
    0x010D :  MOV   A, @0x00    
    0x010E :  IOW   0xE         
C:\mcuproject\xj\motor0910\PWM.c (line 190)
  ;ICIECR = 0x80;
    0x010F :  MOV   A, @0x80    
    0x0110 :  MOV   0x0D, A     
C:\mcuproject\xj\motor0910\PWM.c (line 191)
  ;IMR = 0x02;
    0x0111 :  MOV   A, @0x02    
    0x0112 :  IOW   0xF         
C:\mcuproject\xj\motor0910\PWM.c (line 192)
  ;ISR&=0XF0;
    0x0113 :  MOV   A, @0xF0    
    0x0114 :  AND   0x0F, A     
C:\mcuproject\xj\motor0910\PWM.c (line 193)
  ;DISI();
    0x0115 :  DISI              
C:\mcuproject\xj\motor0910\PWM.c (line 194)
  ;SLEP();
    0x0116 :  SLEP              
C:\mcuproject\xj\motor0910\PWM.c (line 195)
  ;ENI();
    0x0117 :  ENI               
C:\mcuproject\xj\motor0910\PWM.c (line 196)
  ;WDTCR=0x80;
    0x0118 :  MOV   A, @0x80    
    0x0119 :  IOW   0xE         
C:\mcuproject\xj\motor0910\PWM.c (line 197)
  ;ICIECR = 0x00;
    0x011A :  CLR   0x0D        
C:\mcuproject\xj\motor0910\PWM.c (line 198)
  ;ISR=0;
    0x011B :  CLR   0x0F        
C:\mcuproject\xj\motor0910\PWM.c (line 199)
  ;IMR=1;
    0x011C :  MOV   A, @0x01    
    0x011D :  IOW   0xF         
C:\mcuproject\xj\motor0910\PWM.c (line 200)
  ;}
    0x011E :  RET               
